# /bin/env bash
# bin/compile <build-dir> <cache-dir>

# fail fast
set -e

DEPENDENCY_S3_BUCKET_PATH="http://s3.amazonaws.com/mono-dependencies"

# config
MONO_VERSION="3.0.11"
XSP_VERSION="3.0.11"

# s3 packages
MONO_PACKAGE_URL="${DEPENDENCY_S3_BUCKET_PATH}/mono-${MONO_VERSION}.tar.gz"
XSP_PACKAGE_URL="${DEPENDENCY_S3_BUCKET_PATH}/xsp-${XSP_VERSION}.tar.gz"

BUILD_DIR=$1
CACHE_DIR=$2

cd ${BUILD_DIR}

# cache may not exist yet
mkdir -p ${CACHE_DIR}

echo "-----> Bundling Mono v${MONO_VERSION}"
MONO_CACHE_LOCATION=${CACHE_DIR}/mono-${MONO_VERSION}
if [ ! -d "${MONO_CACHE_LOCATION}" ]; then
  echo "Fetching Mono v${MONO_VERSION} @ ${MONO_PACKAGE_URL}"
  mkdir -p ${MONO_CACHE_LOCATION}
  cd ${MONO_CACHE_LOCATION}
  curl ${MONO_PACKAGE_URL} -s | tar xz
  cd ${BUILD_DIR}
fi
cp -r "${MONO_CACHE_LOCATION}/mono" /app/.

echo "-----> Bundling XSP v${XSP_VERSION}"
XSP_CACHE_LOCATION=${CACHE_DIR}/xsp-${XSP_VERSION}
if [ ! -d "${XSP_CACHE_LOCATION}" ]; then
  echo "Fetching ${XSP_VERSION} @ ${XSP_PACKAGE_URL}"
  mkdir -p ${XSP_CACHE_LOCATION}
  cd ${XSP_CACHE_LOCATION}
  curl ${XSP_PACKAGE_URL} -s | tar xz
  cd ${BUILD_URL}
  # echo "Copying libraries to the GAC"
  # cp -r ${CACHE_DIR}/xsp/lib/mono/gac/* ${CACHE_DIR}/mono/lib/mono/gac/
fi
cp -r "${XSP_CACHE_LOCATION}/xsp" /app/.

# find a solution file
SLN=$(find . -maxdepth 1 -iname "*.sln")
if [ $( echo "${SLN}" | wc -l ) -gt 1 ]; then
echo "-----> Too many *.sln files"
  exit 1
fi

# compile an uploaded application
if [ "${SLN}" != "" ]; then
  echo "-----> Compiling Mono application"

  # need Mono in its expected location for xbuild to work
  # ln -s "${CACHE_DIR}/mono" /app
  export PATH="/app/mono/bin:${PATH}"

  EnableNuGetPackageRestore=true xbuild /property:Configuration=Release ${SLN}
fi

echo "-----> Build SUCCESS"
