#!/usr/bin/env bash
# bin/compile <build-dir> <cache-dir>

# fail fast
set -e

mktmpdir() {
  dir=$(mktemp -t node-$1-XXXX)
  rm -rf $dir
  mkdir -p $dir
  echo $dir
}

function indent() {
  c='s/^/       /'
  case $(uname) in
    Darwin) sed -l "$c";;
    *)      sed -u "$c";;
  esac
}

# config
MONO_VERSION="2.10.8"
XSP_VERSION="2.10.2"

# s3 packages
MONO_PACKAGE="https://s3.amazonaws.com/heroku-buildpack-mono/mono-${MONO_VERSION}.tgz"
XSP_PACKAGE="https://s3.amazonaws.com/heroku-buildpack-mono/xsp-${XSP_VERSION}.tgz"

# important directories: https://gist.github.com/fe7f04abbd9538b656c5
BUILD_DIR=$1
CACHE_DIR=$2

cd ${BUILD_DIR}

# cache may not exist yet
mkdir -p ${CACHE_DIR}

echo "-----> Bundling Mono v$MONO_VERSION"
if [ ! -d "${CACHE_DIR}/mono" ]; then
  curl ${MONO_PACKAGE} --silent --max-time 60 -o - | tar xzf - -C ${CACHE_DIR}
fi
cp -r "${CACHE_DIR}/mono" .

echo "-----> Bundling XSP v$XSP_VERSION"
if [ ! -d "${CACHE_DIR}/xsp" ]; then
  curl ${XSP_PACKAGE} --silent --max-time 60 -o - | tar xzf - -C ${CACHE_DIR}

  # copy XSP DLLs into the GAC
  cp -r ${CACHE_DIR}/xsp/lib/mono/gac/* ${CACHE_DIR}/mono/lib/mono/gac/
fi
cp -r "${CACHE_DIR}/xsp" .

# find a solution file
SLN=$(find . -maxdepth 1 -iname "*.sln")
if [ $( echo "${SLN}" | wc -l ) -gt 1 ]; then
  echo "-----> Too many *.sln files" 1>&2
  exit 1
fi

if [ "${SLN}" != "" ]; then
  echo "-----> Compiling Mono application"

  # need Mono in its expected location for xbuild to work
  cp -r "${CACHE_DIR}/mono" /app
  export PATH="/app/mono/bin:${PATH}"

  xbuild /property:Configuration=Release ${SLN}
fi
